## Работа 4. Детектирование границ документов на кадрах видео
автор: Клейменов В. Е.
дата: @time_stemp@
url: [https://github.com/hundredpercentdynamite/opencv-lab/tree/master/prj.labs/lab04](https://github.com/hundredpercentdynamite/opencv-lab/tree/master/prj.labs/lab04)

### Задание
0. текст, иллюстрации и подписи отчета придумываем самостоятельно
1. самостоятельно снимаем видео смартфоном
- объект съемки - купюры (рубли разного номинала), расправленные и лежащие на поверхности (проективно искаженный прямоугольник)
- количество роликов - от 5 шт.
- длительность - 5-7 сек
- условия съемки разные
2. извлекаем по 3 кадра из каждого ролика (делим кол-во кадров на 5 и берем каждый с индеком 2/5,3/5,4/5)
3. цветоредуцируем изображения
4. бинаризуем изображения
5. морфологически обрабатываем изображения
6. выделяем основную компоненту связности
7. руками изготавливаем маски (идеальная зона купюры)
8. оцениваем качество выделение зоны и анализируем ошибки

### Результаты

#### Исходные данные
Для работы была выбрана купюра номиналом 500 рублей, снятая на фотокамеру мобильного телефона.<br>
Съёмка проводилась при разном качестве освещения, в разных ракурсах на трёх фонах.
Всего отснято 7 видео роликов, из каждого ролика бралось по 3 кадра, обрабатывалось и сравнивалось с соответствующими эталонными масками, сделанными вручную.

#### Описание алгоритма детектирования
1. Извлечение кадров
2. Преобразование цветов в оттенки серого.
3. Бинаризация методом Отсу.
4. Морфологическое открытие бинаризованного изображения
5. Выделение компонент связности и поиск наибольшей компоненты
6. Морфологическое закрытие наибольшей компоненты - маски
7. Сравнение полученной маски с эталонной

#### Оценка качества
Получаемая маска оценивалась отношением общих с эталонной маской белых пикселей к количеству белых пикселей в эталонной маске.<br>
Назовём этот показатель коэфициентом совпадения, он приведён вверху каждого изображения с результатами и обозначен буквой K.

Также, для визуальной оценки, эталонная маска накладывалась на изначальное серое изображение, а разница с полученной маской отмечена цветами:<br>
Зелёным - пиксели, отсутствующие на сгенерированной маске, но присутствующие в эталоне;<br>
Красным - пиксели, отсутствующие на эталоне, но присутствующие в сгенерированной маске.

#### Выводы
Алгоритм отлично справляется с задачей на изображениях с контрастным фоном (светлая купюра, тёмный фон)
![](frame2_2.jpg)<br>
Рис. 1. Изначальное изображение

![](mask2_2.jpg)<br>
Рис. 2. Полученная маска

![](mask2_2_diff.jpg)<br>
Рис. 3. Сравнение маски с эталоном

На Рис. 3 вверху изображения обозначен полученный коэффициент совпадения масок, он равен 0.985.

Результаты на том же фоне, но с меньшим освещением.
![](mask4_2_diff.jpg)<br>
Рис. 4. Результат с меньшим освещением.

Хороший результат получается даже почти при полном отсутствии освещения, но на контрастном фоне.
![](frame7_1.jpg)<br>
Рис. 5. Изначальное изображение без освещения.

Заметен небольшой выброс на полученной маске.
![](mask7_1_diff.jpg)<br>
Рис. 6. Результат без освещения.

Алгоритм плохо справляется с задачей на светлых фонах:
![](frame5_1.jpg)<br>
Рис. 7. Купюра на светлом фоне.

![](mask5_1_diff.jpg)<br>
Рис. 8. Результат на светлом фоне.

Также, встречаются отклонения в работе при неоднородном фоне.
За набольшую компоненту связности была принята часть светлого фона.
![](mask3_1_diff.jpg)<br>
Рис. 9. Результат на неоднородном фоне.

Алгоритм хорошо показал себя в однозначных условиях отделимости купюры от фона даже при плохом освещении, но плохо справился с неоднородным и светлым фоном.

Средний коэффициент совпадения равен ~0.842.

### Текст программы
```cpp
@cpp_source@
```